ROSTemplateFormatVersion: '2015-09-01'
Description:
  en: ChatGPT_on_WeChat service template
  zh-cn: ChatGPT_on_WeChat服务模板
Parameters:
  PayType:
    Type: String
    Label:
      en: ECS Instance Charge Type
      zh-cn: 付费类型
    Default: PostPaid
    AllowedValues:
      - PostPaid
      - PrePaid
    AssociationProperty: ChargeType
    AssociationPropertyMetadata:
      LocaleKey: InstanceChargeType
  PayPeriodUnit:
    Type: String
    Label:
      en: Pay Period Unit
      zh-cn: 购买资源时长周期
    Default: Month
    AllowedValues:
      - Month
      - Year
    AssociationProperty: PayPeriodUnit
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  PayPeriod:
    Type: Number
    Label:
      en: Period
      zh-cn: 购买资源时长
    Default: 1
    AllowedValues:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
    AssociationProperty: PayPeriod
    AssociationPropertyMetadata:
      Visible:
        Condition:
          Fn::Not:
            Fn::Equals:
              - ${PayType}
              - PostPaid
  EcsInstanceType:
    Type: String
    Label:
      en: Instance Type
      zh-cn: 实例类型
    AssociationProperty: ALIYUN::ECS::Instance::InstanceType
    AssociationPropertyMetadata:
      InstanceChargeType: ${PayType}
      Constraints:
        InstanceTypeFamily:
          - ecs.u1
          - ecs.e
  InstancePassword:
    NoEcho: true
    Type: String
    Description:
      en: Server login password, Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 服务器登录密码,长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    AllowedPattern: '^[a-zA-Z0-9-\(\)\`\~\!\@\#\$\%\^\&\*\_\-\+\=\|\{\}\[\]\:\;\<\>\,\.\?\/]*$'
    Label:
      en: Instance Password
      zh-cn: 实例密码
    ConstraintDescription:
      en: Length 8-30, must contain three(Capital letters, lowercase letters, numbers, ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ Special symbol in)
      zh-cn: 长度8-30，必须包含三项（大写字母、小写字母、数字、 ()`~!@#$%^&*_-+=|{}[]:;'<>,.?/ 中的特殊符号）
    MinLength: 8
    MaxLength: 30
    AssociationProperty: ALIYUN::ECS::Instance::Password
  ZoneId:
    Type: String
    Label:
      en: Zone ID
      zh-cn: 可用区ID
    AssociationProperty: ALIYUN::ECS::Instance::ZoneId
  VpcId:
    Type: String
    Label:
      en: VPC ID
      zh-cn: 专有网络VPC实例ID
    AssociationProperty: 'ALIYUN::ECS::VPC::VPCId'
  VSwitchId:
    Type: String
    Label:
      en: VSwitch ID
      zh-cn: 交换机实例ID
    Default: ''
    AssociationProperty: 'ALIYUN::ECS::VSwitch::VSwitchId'
    AssociationPropertyMetadata:
      VpcId: VpcId
      ZoneId: ZoneId
  OpenaiApiKey:
    Type: String
    Label: OpenAI Api Key
    NoEcho: True
  OpenaiOrganizationID:
    Type: String
    Label: OpenAI Organization ID
    Default: ''
  ChatgptTriggerKeyword:
    Type: String
    Label: 
      en: ChatGPT Trigger Keyword
      zh-cn: ChatGPT触发关键词
    Description:
      en: 'In private chat, the message starts with keyword will trigger auto-reply, In group chat, the message starts with @Name <keyword> will trigger auto-reply. The keyword can be empty string, which means in private chat every messages will trigger auto-reply, in group chat only "@ the bot" will trigger auto-reply'
      zh-cn: '在私聊中，消息开头为关键词将触发自动回复，在群聊中，消息开头为@机器人 <关键词> 将触发自动回复。关键词可以为空字符串，即私聊中的每条消息都会触发自动回复，群聊中的只有"@机器人"才会触发自动回复'
    Default: ''
Resources:
  SecurityGroup:
    Type: ALIYUN::ECS::SecurityGroup
    Properties:
      SecurityGroupName:
        Ref: ALIYUN::StackName
      VpcId:
        Ref: VpcId
      SecurityGroupIngress:
        - PortRange: 22/22
          Priority: 1
          SourceCidrIp: 0.0.0.0/0
          IpProtocol: tcp
          NicType: internet
  InstanceGroup:
    Type: ALIYUN::ECS::InstanceGroup
    Properties:
      # 付费类型
      InstanceChargeType:
        Ref: PayType
      PeriodUnit:
        Ref: PayPeriodUnit
      Period:
        Ref: PayPeriod
      VpcId:
        Ref: VpcId
      VSwitchId:
        Ref: VSwitchId
      ZoneId:
        Ref: ZoneId
      SecurityGroupId:
        Ref: SecurityGroup
      ImageId: aliyun_3_x64_20G_alibase_20240528.vhd
      Password:
        Ref: InstancePassword
      InstanceType:
        Ref: EcsInstanceType
      SystemDiskCategory: cloud_essd
      SystemDiskSize: 200
      InternetMaxBandwidthOut: 5
      IoOptimized: optimized
      MaxAmount: 1
  RunInstallCommand:
    Type: ALIYUN::ECS::RunCommand
    Properties:
      InstanceIds:
        Fn::GetAtt:
        - InstanceGroup
        - InstanceIds
      Type: RunShellScript
      Sync: true
      Timeout: 300
      CommandContent:
        Fn::Sub:
          - |
            cat > /etc/systemd/system/docker-compose-app.service <<EOF
            [Unit]
            Description=Docker Compose Application Service
            Requires=docker.service
            After=docker.service

            [Service]
            Type=oneshot
            RemainAfterExit=yes
            WorkingDirectory=/opt/application/ChatGPT-on-WeChat
            ExecStart=/usr/bin/docker compose up -d
            ExecStop=/usr/bin/docker compose down
            TimeoutStartSec=0

            [Install]
            WantedBy=multi-user.target
            EOF

            cat > /opt/application/ChatGPT-on-WeChat/config.yaml <<EOF
            openaiApiKey: "${OpenaiApiKey}"
            openaiOrganizationID: "${OpenaiOrganizationID}"
            chatgptTriggerKeyword: "${ChatgptTriggerKeyword}"
            EOF

            systemctl start docker-compose-app
            sleep 10
          - RegionId:
              Ref: ALIYUN::Region
Outputs:
  AppLocation:
    Label:
      en: Application location
      zh-cn: 应用位置
    Value: /opt/application/ChatGPT-on-WeChat
  Guide:
    Label:
      en: How to use
      zh-cn: 如何使用
    Value: '从资源页找到ECS实例，点击远程连接登录ECS实例，运行"sudo docker compose -f /opt/application/ChatGPT-on-WeChat/docker-compose.yml logs"，使用微信扫描日志中的二维码确认登录桌面微信，稍等片刻即可开始和机器人聊天。Find ECS Instance in resource page, click Remote Connect to login ECS instance, run "sudo docker compose -f /opt/application/ChatGPT-on-WeChat/docker-compose.yml logs", use WeChat scan the QR code to login desktop WeChat, wait a while and you can start chatting with the bot.'
Metadata:
  ALIYUN::ROS::Interface:
    ParameterGroups:
      - Parameters:
          - PayType
          - PayPeriodUnit
          - PayPeriod
        Label:
          en: Pay Type Configuration
          zh-cn: 付费类型配置
      - Parameters:
          - EcsInstanceType
          - InstancePassword
        Label:
          en: Resource Configuration
          zh-cn: 资源配置
      - Parameters:
          - ZoneId
          - VpcId
          - VSwitchId
        Label:
          en: Zone Configuration
          zh-cn: 可用区配置
      - Parameters:
          - OpenaiApiKey
          - OpenaiOrganizationID
          - ChatgptTriggerKeyword
        Label:
          en: Software Configuration
          zh-cn: 软件配置
      